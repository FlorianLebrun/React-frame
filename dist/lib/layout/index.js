"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PluginContext = exports.PluginInstance = exports.WindowID = exports.WindowContainer = exports.WindowComponent = exports.WindowInstance = undefined;

exports.default = function (app) {
  var layout = new _Context.PluginContext(app);
  app.installFeatures({
    layout: layout,
    WindowComponent: _Window.WindowComponent,
    WindowContainer: _Window.WindowContainer,
    PluginInstance: _Plugin.PluginInstance,
    configureLayout: function configureLayout(description) {
      layout.splashComponent = description.splashComponent;
      layout.displayLayout = description.displayLayout;
      return this;
    },
    installPlugin: function installPlugin(description) {
      // eslint-disable-line
      return layout.installPlugin.apply(layout, arguments);
    },
    dettachWindow: function dettachWindow(windowId) {
      layout.frame && layout.frame.dettachWindow(windowId);
    },
    removeWindow: function removeWindow(windowId) {
      this.dettachWindow(windowId);
      delete layout.windows[windowId];
    },
    getWindowHandle: function getWindowHandle(windowId) {
      // eslint-disable-line
      return layout.getWindowInstance.apply(layout, arguments);
    }
  });
};

var _Window = require("./Window");

var _Plugin = require("./Plugin");

var _Context = require("./Context");

exports.WindowInstance = _Window.WindowInstance;
exports.WindowComponent = _Window.WindowComponent;
exports.WindowContainer = _Window.WindowContainer;
exports.WindowID = _Window.WindowID;
exports.PluginInstance = _Plugin.PluginInstance;
exports.PluginContext = _Context.PluginContext;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvbGF5b3V0L2luZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsImxheW91dCIsImluc3RhbGxGZWF0dXJlcyIsIldpbmRvd0NvbXBvbmVudCIsIldpbmRvd0NvbnRhaW5lciIsIlBsdWdpbkluc3RhbmNlIiwiY29uZmlndXJlTGF5b3V0IiwiZGVzY3JpcHRpb24iLCJzcGxhc2hDb21wb25lbnQiLCJkaXNwbGF5TGF5b3V0IiwiaW5zdGFsbFBsdWdpbiIsImFwcGx5IiwiYXJndW1lbnRzIiwiZGV0dGFjaFdpbmRvdyIsIndpbmRvd0lkIiwiZnJhbWUiLCJyZW1vdmVXaW5kb3ciLCJ3aW5kb3dzIiwiZ2V0V2luZG93SGFuZGxlIiwiZ2V0V2luZG93SW5zdGFuY2UiLCJXaW5kb3dJbnN0YW5jZSIsIldpbmRvd0lEIiwiUGx1Z2luQ29udGV4dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztrQkFLZSxVQUFTQSxHQUFULEVBQWM7QUFDM0IsTUFBTUMsU0FBUywyQkFBa0JELEdBQWxCLENBQWY7QUFDQUEsTUFBSUUsZUFBSixDQUFvQjtBQUNsQkQsa0JBRGtCO0FBRWxCRSw0Q0FGa0I7QUFHbEJDLDRDQUhrQjtBQUlsQkMsMENBSmtCO0FBS2xCQyxxQkFBaUIseUJBQVNDLFdBQVQsRUFBMkM7QUFDMUROLGFBQU9PLGVBQVAsR0FBeUJELFlBQVlDLGVBQXJDO0FBQ0FQLGFBQU9RLGFBQVAsR0FBdUJGLFlBQVlFLGFBQW5DO0FBQ0EsYUFBTyxJQUFQO0FBQ0QsS0FUaUI7QUFVbEJDLG1CQUFlLHVCQUFVSCxXQUFWLEVBQTRDO0FBQUU7QUFDM0QsYUFBT04sT0FBT1MsYUFBUCxDQUFxQkMsS0FBckIsQ0FBMkJWLE1BQTNCLEVBQW1DVyxTQUFuQyxDQUFQO0FBQ0QsS0FaaUI7QUFhbEJDLG1CQUFlLHVCQUFTQyxRQUFULEVBQTZCO0FBQzFDYixhQUFPYyxLQUFQLElBQWdCZCxPQUFPYyxLQUFQLENBQWFGLGFBQWIsQ0FBMkJDLFFBQTNCLENBQWhCO0FBQ0QsS0FmaUI7QUFnQmxCRSxrQkFBYyxzQkFBU0YsUUFBVCxFQUE2QjtBQUN6QyxXQUFLRCxhQUFMLENBQW1CQyxRQUFuQjtBQUNBLGFBQU9iLE9BQU9nQixPQUFQLENBQWVILFFBQWYsQ0FBUDtBQUNELEtBbkJpQjtBQW9CbEJJLHFCQUFpQix5QkFBVUosUUFBVixFQUE4QztBQUFFO0FBQy9ELGFBQU9iLE9BQU9rQixpQkFBUCxDQUF5QlIsS0FBekIsQ0FBK0JWLE1BQS9CLEVBQXVDVyxTQUF2QyxDQUFQO0FBQ0Q7QUF0QmlCLEdBQXBCO0FBd0JELEM7O0FBOUJEOztBQUNBOztBQUNBOztRQStCRVEsYztRQUNBakIsZTtRQUNBQyxlO1FBQ0FpQixRO1FBQ0FoQixjO1FBQ0FpQixhIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7IFdpbmRvd0luc3RhbmNlLCBXaW5kb3dDb21wb25lbnQsIFdpbmRvd0NvbnRhaW5lciwgV2luZG93SUQgfSBmcm9tIFwiLi9XaW5kb3dcIlxyXG5pbXBvcnQgeyBQbHVnaW5JbnN0YW5jZSB9IGZyb20gXCIuL1BsdWdpblwiXHJcbmltcG9ydCB7IFBsdWdpbkNvbnRleHQgfSBmcm9tIFwiLi9Db250ZXh0XCJcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGFwcCkge1xyXG4gIGNvbnN0IGxheW91dCA9IG5ldyBQbHVnaW5Db250ZXh0KGFwcClcclxuICBhcHAuaW5zdGFsbEZlYXR1cmVzKHtcclxuICAgIGxheW91dCxcclxuICAgIFdpbmRvd0NvbXBvbmVudCxcclxuICAgIFdpbmRvd0NvbnRhaW5lcixcclxuICAgIFBsdWdpbkluc3RhbmNlLFxyXG4gICAgY29uZmlndXJlTGF5b3V0OiBmdW5jdGlvbihkZXNjcmlwdGlvbjogT2JqZWN0KTogUGx1Z2luQ2xhc3Mge1xyXG4gICAgICBsYXlvdXQuc3BsYXNoQ29tcG9uZW50ID0gZGVzY3JpcHRpb24uc3BsYXNoQ29tcG9uZW50XHJcbiAgICAgIGxheW91dC5kaXNwbGF5TGF5b3V0ID0gZGVzY3JpcHRpb24uZGlzcGxheUxheW91dFxyXG4gICAgICByZXR1cm4gdGhpc1xyXG4gICAgfSxcclxuICAgIGluc3RhbGxQbHVnaW46IGZ1bmN0aW9uIChkZXNjcmlwdGlvbjogT2JqZWN0KTogUGx1Z2luQ2xhc3MgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXHJcbiAgICAgIHJldHVybiBsYXlvdXQuaW5zdGFsbFBsdWdpbi5hcHBseShsYXlvdXQsIGFyZ3VtZW50cylcclxuICAgIH0sXHJcbiAgICBkZXR0YWNoV2luZG93OiBmdW5jdGlvbih3aW5kb3dJZDogV2luZG93SUQpIHtcclxuICAgICAgbGF5b3V0LmZyYW1lICYmIGxheW91dC5mcmFtZS5kZXR0YWNoV2luZG93KHdpbmRvd0lkKVxyXG4gICAgfSxcclxuICAgIHJlbW92ZVdpbmRvdzogZnVuY3Rpb24od2luZG93SWQ6IFdpbmRvd0lEKSB7XHJcbiAgICAgIHRoaXMuZGV0dGFjaFdpbmRvdyh3aW5kb3dJZClcclxuICAgICAgZGVsZXRlIGxheW91dC53aW5kb3dzW3dpbmRvd0lkXVxyXG4gICAgfSxcclxuICAgIGdldFdpbmRvd0hhbmRsZTogZnVuY3Rpb24gKHdpbmRvd0lkOiBXaW5kb3dJRCk6IFdpbmRvd0luc3RhbmNlIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxyXG4gICAgICByZXR1cm4gbGF5b3V0LmdldFdpbmRvd0luc3RhbmNlLmFwcGx5KGxheW91dCwgYXJndW1lbnRzKVxyXG4gICAgfSxcclxuICB9KVxyXG59XHJcblxyXG5leHBvcnQge1xyXG4gIFdpbmRvd0luc3RhbmNlLFxyXG4gIFdpbmRvd0NvbXBvbmVudCxcclxuICBXaW5kb3dDb250YWluZXIsXHJcbiAgV2luZG93SUQsXHJcbiAgUGx1Z2luSW5zdGFuY2UsXHJcbiAgUGx1Z2luQ29udGV4dCxcclxufSJdfQ==